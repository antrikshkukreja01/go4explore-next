name: Deploy to Server

on:
    push:
        branches:
            - main  

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - run: sudo apt-get update
            - run: sudo apt-get install python3-pip
            - run: pip3 install awscli
            - run: aws configure set aws_access_key_id ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
            - run: aws configure set aws_secret_access_key ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
            - run: aws configure set default.region ${{ secrets.AWS_ECR_REGION }}

            - name: Logging in AWS
              run: aws ecr get-login-password --region ${{ secrets.AWS_ECR_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}

            - name: Building Docker image
              run: docker build -t ${{ secrets.AWS_ECR_URL }}/go4explore-frontend:latest .
  
            - name: Pushing Docker image
              run: docker push ${{ secrets.AWS_ECR_URL }}/go4explore-frontend:latest
  
            - name: SSH key Setup
              run: |
                mkdir -p ~/.ssh/
                echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/key.pem
                chmod 600 ~/.ssh/key.pem
                ssh-keyscan -H ${{ vars.npm  }} >> ~/.ssh/known_hosts
  
  
            - name: Deploying Docker image
              run: |
                    ssh -i ~/.ssh/key.pem ubuntu@${{ vars.SERVER_IP }} 'aws ecr get-login-password --region ${{ secrets.AWS_ECR_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }} && docker pull ${{ secrets.AWS_ECR_URL }}/go4explore-frontend:latest && docker stop frontend && docker rm frontend && docker rmi ${{ secrets.AWS_ECR_URL }}/go4explore-frontend:current && docker tag ${{ secrets.AWS_ECR_URL }}/go4explore-frontend:latest ${{ secrets.AWS_ECR_URL }}/go4explore-frontend:current && docker run -d --name frontend -p 2200:3000 ${{ secrets.AWS_ECR_URL }}/go4explore-frontend:current'
